{
    "AcceptTeeEula":  "是否现在接受 Team Explorer Everywhere 许可协议? (Y/N)",
    "AccessDenied":  "访问被拒绝",
    "AccessDeniedSettingDelayedStartOption":  "设置服务延迟自动启动选项时访问被拒绝。",
    "AccessDeniedSettingRecoveryOption":  "设置服务恢复选项时拒绝访问。",
    "AddAgentFailed":  "未能添加代理。请重试或按 Ctrl-C 退出",
    "AddBuildTag":  "添加版本标记",
    "AddDeploymentGroupTagsFlagDescription":  "代理的部署组标记? (Y/N)",
    "AddEnvironmentVMResourceTags":  "环境虚拟机资源标记? (是/否)",
    "AgentAddedSuccessfully":  "已成功添加代理",
    "AgentAlreadyInsideContainer":  "代理已在容器内运行时，不支持容器功能。请参考文档(https://go.microsoft.com/fwlink/?linkid=875268)",
    "AgentDoesNotSupportContainerFeatureRhel6":  "代理在 Red Hat Enterprise Linux 6 或 CentOS 6 上不支持容器功能。",
    "AgentDowngrade":  "正在将代理降级到较低的版本。这通常是由于当前为 bug 修复而发布的代理回退所导致的。若要禁用此行为，请在启动代理之前设置环境变量 AZP_AGENT_DOWNGRADE_DISABLED=true。",
    "AgentExit":  "代理将短暂退出以进行更新，应当会在 10 秒内再次联机。",
    "AgentIsNotConfigured":  "未配置代理。",
    "AgentMachineNameLog":  "代理计算机名称:“{0}”",
    "AgentMachinePoolNameLabel":  "代理池",
    "AgentName":  "代理名称",
    "AgentNameLog":  "代理名称:“{0}”",
    "AgentReplaced":  "已成功替换代理",
    "AgentRunningBehindProxy":  "代理正在代理服务器后面运行:“{0}”",
    "AgentVersion":  "当前代理版本:“{0}”",
    "AgentWithSameNameAlreadyExistInPool":  "池 {0} 已包含名为 {1} 的代理。",
    "AllowContainerUserRunDocker":  "允许用户“{0}”在没有 SUDO 的情况下运行任何 docker 命令。",
    "AlreadyConfiguredError":  "无法配置此代理，因为已配置。要重新配置此代理，请首先运行 \"config.cmd remove\" 或 \"./config.sh remove\"。",
    "ArgumentNeeded":  "必须指定“{0}”。",
    "ArtifactDownloadFailed":  "未能从 {0} 下载项目。",
    "ArtifactLocationRequired":  "项目位置必填。",
    "ArtifactNameIsNotValid":  "工件名称无效: {0}。它不能包含 \"\\\"、\"/\"、\u0027、\":\"、\"\u003c\u0027, \u0027\u003e\"、\"|\"、\"*\" 和 \"?\"",
    "ArtifactNameRequired":  "项目名称必填。",
    "ArtifactTypeRequired":  "项目类型必填。",
    "AssociateArtifact":  "关联项目",
    "AssociateArtifactCommandNotSupported":  "{0} 中不支持关联服务器项目。",
    "AssociateArtifactWithBuild":  "已将项目 {0} 与生成 {1} 关联",
    "AttachFileNotExist":  "无法附加(类型:{0} 名称:{1})文件: {2}。文件不存在。",
    "AttachmentExceededMaximum":  "正在跳过附件，因为它超出了允许的最大大小 75MB: {0}",
    "AttemptRemoveCredFromConfig":  "尝试使用 git 命令行从 git 配置中删除 \"{0}\" 失败。试图直接修改 git 配置文件以删除凭据。",
    "AuthenticationType":  "身份验证类型",
    "AutoLogonAccountNameDescription":  "要用于自动登录的用户帐户",
    "AutoLogonOverwriteDeniedError":  "无法配置自动登录，因为已为计算机上的其他用户({0})配置了自动登录。如果希望覆盖，请使用 \"--overwriteautologon\"。",
    "AutoLogonPolicies_LegalNotice":  "法律声明",
    "AutoLogonPolicies_ShutdownReason":  "关闭原因",
    "AutoLogonPoliciesInspection":  "正在检查可能导致自动登录无法正常工作的策略。",
    "AutoLogonPoliciesWarningsHeader":  "以下策略可能会影响自动登录:",
    "BuildDirLastUseTIme":  "上次使用生成目录“{0}”的时间为: {1}",
    "BuildIdIsNotAvailable":  "尝试下载“{0}”环境中的管道工件，但生成 ID 不存在。如果工件是生成，只能下载“{1}”环境中的管道工件。",
    "BuildIdIsNotValid":  "生成 ID 无效: {0}",
    "BuildNumberRequired":  "版本编号必填。",
    "BuildsDoesNotExist":  "提供的管道定义中当前没有任何生成。",
    "BuildTagAddFailed":  "未成功添加版本标记“{0}”。",
    "BuildTagRequired":  "版本标记必填。",
    "BuildTagsForBuild":  "现在，版本“{0}”拥有下列标记: {1}",
    "CannotChangeParentTimelineRecord":  "无法更改现有时间线记录的父时间线记录。",
    "CannotDownloadFromCurrentEnvironment":  "无法从 {0} 环境下载管道工件。",
    "CannotFindHostName":  "从服务器 URL 中找不到 VSTS 组织名称:“{0}”",
    "CanNotFindService":  "找不到服务 {0}",
    "CanNotGrantPermission":  "无法将 LogonAsService 权限授予用户 {0}",
    "CanNotStartService":  "无法启动该服务。请查看日志以获取更多详细信息。",
    "CanNotStopService":  "无法及时停止服务 {0}。",
    "CannotUploadFile":  "无法上传文件，因为未指定文件位置。",
    "CannotUploadFromCurrentEnvironment":  "无法从 {0} 环境上传到管道工件。",
    "CannotUploadSummary":  "无法上传摘要文件，因为未指定摘要文件位置。",
    "CheckoutTaskDisplayNameFormat":  "签出 {0}@{1} 至 {2}",
    "ClockSkewStopRetry":  "{0} 秒后，停止重试 OAuth 令牌请求异常。",
    "CodeCoverageDataIsNull":  "未找到覆盖率数据。有关详细信息，请查看生成错误/警告。",
    "CodeCoveragePublishIsValidOnlyForBuild":  "发布代码覆盖率仅适用于“生成”。",
    "CollectionName":  "集合名称",
    "CommandDuplicateDetected":  "已为区域 {1} 安装命令 {0}",
    "CommandKeywordDetected":  "“{0}”包含日志记录命令关键字 \"##vso\"，但它不是合法的命令。请查看已接受的命令的列表: https://go.microsoft.com/fwlink/?LinkId=817296",
    "CommandLineHelp":  [
                            "命令:",
                            " .{0}config.{1}          配置代理",
                            " .{0}config.{1} remove   取消配置代理",
                            " .{0}run.{1}             以交互方式运行代理",
                            " .{0}run.{1} --once      运行代理，在关闭前最多接受一个作业",
                            "",
                            "Options:",
                            " --version  打印代理版本",
                            " --commit   打印代理提交",
                            " --help     打印每个命令的帮助"
                        ],
    "CommandLineHelp_Common":  [
                                   "通用选项:",
                                   " --url \u003curl\u003e                       服务器的 URL。例如: https://myaccount.visualstudio.com 或",
                                   "                                   http://onprem:8080/tfs",
                                   " --auth \u003ctype\u003e                     身份验证类型。有效值为:",
                                   "                                    pat        (个人访问令牌)",
                                   "                                    negotiate  (Kerberos 或 NTLM)",
                                   "                                    alt        (基本身份验证)",
                                   "                                    integrated (Windows 默认凭据)",
                                   " --token \u003ctoken\u003e                   与 --auth pat 联用。个人访问令牌。",
                                   " --userName \u003cuserName\u003e            与 --auth negotiate 或 --auth alt 联用。以下列格式指定 Windows 用户名:",
                                   "                                   domain\\userName 或 userName@domain.com",
                                   " --password \u003cpassword\u003e             与 --auth negotiate 或 --auth alt 联用。",
                                   " --unattended                      无人参与的配置。不会显示提示。必须向命令行提供所答案。",
                                   "                                   ",
                                   " --version                         打印代理版本",
                                   " --commit                          打印代理提交",
                                   " --help                            打印帮助"
                               ],
    "CommandLineHelp_Configure":  [
                                      ".{0}config.{1} [options]",
                                      "",
                                      "有关取消配置方面的帮助，请参阅: .{0}config.{1} remove --help",
                                      "",
                                      "{2}",
                                      "",
                                      "配置选项:",
                                      " --pool \u003cpool\u003e                     供代理加入的池名称",
                                      " --agent \u003cagent\u003e                   代理名称",
                                      " --replace                         替换池中的代理。如果该名称侦听另一个",
                                      "                                   代理，它将开始失败并出现冲突。",
                                      " --work \u003cworkDirectory\u003e            存储作业数据的工作目录。默认为代理目录的",
                                      "                                   根目录下的_work。工作目录由指定的",
                                      "                                   agent 代理所有，不应在多个代理之间共享。",
                                      " --acceptTeeEula                   仅适用于 macOS 和 Linux。接受 TEE 最终用户许可协议。",
                                      " --gitUseSChannel                  仅限 Windows only。指示 Git 使用 Windows 的原生证书存储。",
                                      "",
                                      "启动选项(仅适用于 Windows):",
                                      " --runAsService                    配置代理以 Windows 服务的方式运行。需要",
                                      "                                   管理员权限。",
                                      " --runAsAutoLogon                  配置自动登录和在启动时运行代理。需要",
                                      "                                   管理员权限。",
                                      " --windowsLogonAccount \u003caccount\u003e   与 --runAsService 或 --runAsAutoLogon 一同使用。使用以下格式指定 Windows 用户",
                                      "                                   名: domain\\userName or userName@domain.com",
                                      " --windowsLogonPassword \u003cpassword\u003e 与 --runAsService 或 --runAsAutoLogon 一同使用。Windows 登录密码。",
                                      " --overwriteAutoLogon              与 --runAsAutoLogon 一同使用。覆盖计算机上任何现有的",
                                      "                                   自动登录名。",
                                      " --noRestart                       与 --runAsAutoLogon 一同使用。请勿在配置完成后",
                                      "                                   重启。",
                                      "",
                                      "部署组选项:",
                                      " --deploymentGroup                 配置代理作为部署组代理。",
                                      " --projectName \u003cname\u003e              与 --deploymentGroup 一同使用。团队项目名称。",
                                      " --addDeploymentGroupTags          与 --deploymentGroup 一同使用。指定添加部署组标记。",
                                      " --deploymentGroupName \u003cname\u003e      与 --deploymentGroup 一同使用。供代理加入的部署组。",
                                      " --deploymentGroupTags \u003ctags\u003e      与 --addDeploymentGroupTags 一同使用。部署组代理标记的",
                                      "                                   the 逗号分隔的列表。例如 \"web, db\"。",
                                      "",
                                      "{3}",
                                      "",
                                      "无人参与的配置示例:",
                                      "",
                                      "VSTS authentication",
                                      ".{0}config.{1} --unattended --url https://myaccount.visualstudio.com --auth pat --token myToken --pool default --agent myAgent --acceptTeeEula",
                                      "",
                                      "带集成式身份验证的本地 TFS (仅适用于 Windows)",
                                      ".\\config.cmd --unattended --url http://mylocaltfsserver:8080/tfs --auth integrated --pool default --agent myAgent",
                                      "",
                                      "带协商式身份验证的本地 TFS",
                                      ".{0}config.{1} --unattended --url http://mylocaltfsserver:8080/tfs --auth negotiate --userName myDomain\\myUserName --password myPassword --pool default --agent myAgent --acceptTeeEula",
                                      "",
                                      "使用相同的代理名称替换现有代理",
                                      ".{0}config.{1} --unattended --url https://myaccount.visualstudio.com --auth pat --token myToken --pool default --agent myAgent --replace --acceptTeeEula",
                                      "",
                                      "指定代理工作目录(Windows)",
                                      ".\\config.cmd --unattended --url https://myaccount.visualstudio.com --auth pat --token myToken --pool default --agent myAgent --work D:\\agent_work",
                                      "",
                                      "指定代理工作目录(macOS 和 Linux)",
                                      "./config.sh --unattended  --url https://myaccount.visualstudio.com --auth pat --token myToken --pool default --agent myAgent --work usr/local/agent_work",
                                      "",
                                      "以记录为 NetworkService 的 Windows 服务的方式运行(仅适用于 Windows)",
                                      ".\\config.cmd --unattended --url https://myaccount.visualstudio.com --auth pat --token myToken --pool default --agent myAgent --runAsService",
                                      "",
                                      "以记录为域帐户的 Windows 服务的方式运行(仅适用于 Windows)",
                                      ".\\config.cmd --unattended --url https://myaccount.visualstudio.com --auth pat --token myToken --pool default --agent myAgent --runAsService --windowsLogonAccount myDomain\\myUserName --windowsLogonPassword myPassword",
                                      "",
                                      "以自动登录代理的方式运行(仅适用于 Windows)",
                                      ".\\config.cmd --unattended --url https://myaccount.visualstudio.com --auth pat --token myToken --pool default --agent myAgent --runAsAutoLogon --windowsLogonAccount myDomain\\myUserName --windowsLogonPassword myPassword",
                                      "",
                                      "以自动登录代理的方式运行，并不在配置后重新启动(仅适用于 Windows)",
                                      ".\\config.cmd --unattended --url https://myaccount.visualstudio.com --auth pat --token myToken --pool default --agent myAgent --runAsAutoLogon --windowsLogonAccount myDomain\\myUserName --windowsLogonPassword myPassword --noRestart",
                                      "",
                                      "部署组代理以记录为本地系统的 Windows 服务方式运行(仅适用于 Windows)",
                                      ".\\config.cmd --unattended --deploymentGroup --url https://myaccount.visualstudio.com --auth pat --token myToken --projectName myProject --deploymentGroupName myDeploymentGroup --agent myAgent --addDeploymentGroupTags --deploymentGroupTags \"web, db\" --runAsService --windowsLogonAccount \"NT AUTHORITY\\SYSTEM\"",
                                      "",
                                      "带有标记的部署组代理",
                                      ".{0}config.{1} --unattended --deploymentGroup --url https://myaccount.visualstudio.com --auth pat --token myToken --projectName myProject --deploymentGroupName myDeploymentGroup --agent myAgent --addDeploymentGroupTags --deploymentGroupTags \"web, db\" --runAsService --windowsLogonAccount \"NT AUTHORITY\\SYSTEM\" --acceptTeeEula"
                                  ],
    "CommandLineHelp_Env":  [
                                "环境变量:",
                                "可为环境变量指定任意命令行参数。使用格式",
                                "VSTS_AGENT_INPUT_\u003cARGUMENT_NAME\u003e。例如: VSTS_AGENT_INPUT_PASSWORD"
                            ],
    "CommandLineHelp_Remove":  [
                                   ".{0}config.{1} remove [选项]",
                                   "",
                                   "{2}",
                                   "",
                                   "{3}",
                                   "",
                                   "无人参与的删除示例:",
                                   "",
                                   "VSTS",
                                   ".{0}config.{1} remove --unattended --auth pat --token myToken",
                                   "",
                                   "采用集成身份验证的本地 TFS (仅限 Windows)",
                                   ".{0}config.{1} remove --unattended --auth integrated",
                                   "",
                                   "采用集成身份验证的本地 TFS",
                                   ".{0}config.{1} remove --unattended --auth negotiate --username myDomain\\myUserName --password myPassword"
                               ],
    "CommandNotAllowed":  "由于策略限制，此步骤中不允许使用 ##vso[{0}.{1}]。请参考文档(http://go.microsoft.com/fwlink/?LinkId=817296)",
    "CommandNotFound":  "找不到 ##vso[{0}.command] 的命令扩展。请参阅文档(http://go.microsoft.com/fwlink/?LinkId=817296)",
    "CommandNotFound2":  "对于 {2} 命令扩展来说，##vso[{0}.{1}] 不是已识别的命令。请参阅参考文档(http://go.microsoft.com/fwlink/?LinkId=817296)。",
    "CommandNotSupported":  "{1} 流不支持 {0} 命令。请参阅文档(http://go.microsoft.com/fwlink/?LinkId=817296)",
    "CommandProcessFailed":  "无法成功处理命令“{0}”。请参阅文档(http://go.microsoft.com/fwlink/?LinkId=817296)",
    "ConnectingToServer":  "正在连接到服务器...",
    "ConnectSectionHeader":  "连接",
    "ConnectToServer":  "正在连接到服务器。",
    "ContainerJobRequireSystemDefaultWorkDir":  "需要 System.DefaultWorkingDirectory 才能运行容器作业。",
    "ContainerWindowsVersionRequirement":  "容器功能需要 Windows Server 1803 或更高版本。请参考文档(https://go.microsoft.com/fwlink/?linkid=875268)",
    "CopyFileComplete":  "已成功将工件发布到 {0}",
    "CopyFileToDestination":  "将文件“{0}”复制到“{1}”",
    "CouldNotRemoveService":  "无法删除服务“{0}”",
    "CreateUserWithSameUIDInsideContainer":  "请尝试使用 UID“{0}”在容器中创建用户。",
    "CurrentUTC":  "当前 UTC: {0}",
    "CustomLogDoesNotExist":  "未提供日志文件路径或文件不存在:“{0}”",
    "CustomMarkDownSummaryDoesNotExist":  "未提供标记摘要文件路径或文件不存在:“{0}”",
    "DeleteGCTrackingFile":  "删除“{0}”后删除 gc 跟踪文件",
    "DeleteUnusedBuildDir":  "删除未使用的生成目录",
    "DeleteUnusedReleaseDir":  "删除未使用的发布目录",
    "Deleting":  "正在删除: {0}",
    "DeletingCredentials":  "正在删除 .credentials",
    "DeletingSettings":  "正在删除 .agent",
    "DeploymentGroupName":  "部署组名称",
    "DeploymentGroupNotFound":  "找不到部署组:“{0}”",
    "DeploymentGroupTags":  "逗号分隔的标记列表(例如 web, db)",
    "DeploymentGroupTagsAddedMsg":  "已成功添加标记",
    "DeploymentMachineWithSameNameAlreadyExistInDeploymentGroup":  "DeploymentGroup {0} 已包含名为 {1} 的计算机。",
    "DeploymentPoolName":  "部署池名称",
    "DeploymentPoolNotFound":  "未找到部署池:“{0}”",
    "DirectoryHierarchyUnauthorized":  "对于“{0}”和层次结构中的每个目录，读取目录内容的权限是必需的。{1}",
    "DirectoryIsEmptyForArtifact":  "目录“{0}”为空。没有要添加到生成工件“{1}”的内容。",
    "DirectoryNotFound":  "找不到目录:“{0}”",
    "DirExpireLimit":  "目录有效期: {0} 天。",
    "DiscoverBuildDir":  "发现超过 {0} 天未使用的陈旧生成目录。",
    "DiscoverReleaseDir":  "发现超过 {0} 天未使用的陈旧发布目录。",
    "DownloadAgent":  "正在下载 {0} 代理",
    "DownloadArtifactFinished":  "下载项目已完成。",
    "DownloadArtifacts":  "下载项目",
    "DownloadArtifactsFailed":  "下载项目失败: {0}",
    "DownloadArtifactTo":  "将项目下载到: {0}",
    "DownloadArtifactWarning":  "请使用“下载生成工件”任务下载 {0} 类型工件。https://docs.microsoft.com/zh-cn/azure/devops/pipelines/tasks/utility/download-build-artifacts?view=azure-devops",
    "DownloadingFromBuild":  "从指定的生成下载: #{0}",
    "DownloadingJenkinsCommitsBetween":  "下载作业 {0} 至 {1} 之间的提交",
    "DownloadingJenkinsCommitsFailedWithException":  "下载 jenkins 项目 {0} 的提交失败。异常: {1}",
    "DownloadingMultiplePipelineArtifacts":  "正在下载 {0} 个管道工件…",
    "DownloadingTask0":  "正在下载任务: {0} ({1})",
    "EnsureJobFinished":  "等待当前作业完成运行。",
    "EnsureTasksExist":  "下载全部所需任务。",
    "EnterValidValueFor0":  "为 {0} 输入一个有效值。",
    "EnvironmentName":  "环境名称",
    "EnvironmentNotFound":  "找不到环境:“{0}”",
    "EnvironmentVariableExceedsMaximumLength":  "环境变量“{0}”超出了支持的最大长度。环境变量长度: {1}，支持的最大长度: {2}",
    "EnvironmentVMResourceTags":  "逗号分隔的标记列表(例如 web, db)",
    "ErrorDuringBuildGC":  "无法根据“{0}”发现垃圾。请下次再试。",
    "ErrorDuringBuildGCDelete":  "无法根据“{0}”完成 GC。请下次再试。",
    "ErrorDuringReleaseGC":  "无法根据“{0}”发现垃圾。请下次再试。",
    "ErrorDuringReleaseGCDelete":  "无法根据“{0}”完成 GC。请下次再试。",
    "ErrorOccurred":  "发生了错误: {0}",
    "ErrorOccurredWhilePublishingCCFiles":  "发布代码覆盖率文件时出错。错误: {0}",
    "EulasSectionHeader":  "最终用户许可协议",
    "EvaluateReleaseTrackingFile":  "评估 ReleaseDirectory 跟踪文件: {0}",
    "EvaluateTrackingFile":  "评估 BuildDirectory 跟踪文件: {0}",
    "ExpectedMappingCloak":  "预期的映射 [{0}] 掩蔽:“{1}”。实际:“{2}”",
    "ExpectedMappingLocalPath":  "预期的映射 [{0}] 本地路径:“{1}”。实际:“{2}”",
    "ExpectedMappingRecursive":  "预期的映射 [{0}] 递归:“{1}”。实际:“{2}”",
    "ExpectedMappingServerPath":  "预期的映射 [{0}] 服务器路径:“{1}”。实际:“{2}”",
    "Failed":  "失败: ",
    "FailedDeletingTempDirectory0Message1":  "删除临时目录“{0}”失败。{1}",
    "FailedTestsInResults":  "在结果文件中检测到一个或多个测试失败。可以在“测试”选项卡中查看已发布测试结果的详细摘要。",
    "FailedToAddTags":  "未能将标记应用到代理。请重试或按 Ctrl-C 退出。此外，也可转到部署组网页添加标记",
    "FailedToConnect":  "连接失败。请重试或按 Ctrl-C 退出",
    "FailedToDeleteTempScript":  "删除临时内联脚本文件“{0}”失败。{1}",
    "FailedToFindDeploymentGroup":  "未能找到部署组。请重试或按 Ctrl-C 退出",
    "FailedToFindEnvironment":  "找不到环境。请重试或按 Ctrl-C 退出",
    "FailedToFindPool":  "未能找到池名称。请重试或按 Ctrl-C 退出",
    "FailedToLockServiceDB":  "无法将服务数据库锁定为“写入”",
    "FailedToOpenSCM":  "无法打开服务控制管理器",
    "FailedToOpenSCManager":  "未能打开服务控制管理器",
    "FailedToPublishTestResults":  "未能发布测试结果: {0}",
    "FailedToReadFile":  "读取 {0} 失败。错误: {1}。",
    "FailedToReplaceAgent":  "替换代理失败。请重试或按 Ctrl-C 退出",
    "FailToRemoveGitConfig":  "无法从 git 配置中删除“{0}”。若要删除凭据，请从存储库根路径“{1}”中执行 \"git config --unset-all {0}\"。",
    "FileContainerUploadFailed":  "无法将文件复制到服务器 StatusCode={0}: {1}。源文件路径: {2}。目标服务器路径: {3}",
    "FileDoesNotExist":  "文件“{0}”不存在或不可访问。",
    "FileNotFound":  "找不到文件:“{0}”",
    "FilePathNotFound":  "无法找到“{0}”的文件路径。",
    "FileShareOperatingSystemNotSupported":  "不支持将项目从 Linux 或 macOS 代理发布到文件共享。请将项目类型更改为 `Azure Pipelines` 或使用 Windows 代理。",
    "FileUploadCancelled":  "上传文件“{0}”期间已取消文件上传。",
    "FileUploadDetailTrace":  "无法上传的文件的详细信息上传跟踪: {0}",
    "FileUploadFailed":  "由于“{1}”，无法上传“{0}”。",
    "FileUploadFailedAfterRetry":  "重试后仍无法上传文件。",
    "FileUploadFailedRetryLater":  "{0} 个文件上传失败，请一分钟后重试。",
    "FileUploadFileOpenFailed":  "上传文件“{1}”时出现文件错误“{0}”。",
    "FileUploadFinish":  "文件“{0}”花了 {1} 毫秒才完成上传",
    "FileUploadProgress":  "文件总计: {0} ---- 已处理文件: {1} ({2}%)",
    "FileUploadProgressDetail":  "正在上传“{0}”({1}%)",
    "FileUploadRetry":  "开始第 {0} 此重试失败的文件上传。",
    "FileUploadRetryInSecond":  "{0} 秒后重试文件上传。",
    "FileUploadRetrySucceed":  "重试后文件上传成功。",
    "FileUploadSucceed":  "文件上传成功。",
    "FinalizeJob":  "完成作业",
    "FinishMaintenance":  "已完成维护: {0}",
    "FoundErrorInTrace":  [
                              "诊断日志中报告了 {0}。请查看日志了解更多详细信息。",
                              "    - {1}"
                          ],
    "GCBuildDir":  "删除孤立或陈旧生成目录。",
    "GCBuildDirNotEnabled":  "未启用“删除孤立和陈旧生成目录”选项。",
    "GCDirIsEmpty":  "生成目录无需成为 GC。“{0}”不含任何跟踪文件。",
    "GCDirNotExist":  "生成目录无需成为 GC。“{0}”不存在。",
    "GCOldFormatTrackingFile":  "将跟踪文件“{0}”标记为 GC，因为从未使用过它。",
    "GCReleaseDir":  "删除孤立或陈旧的发布目录。",
    "GCReleaseDirIsEmpty":  "发布目录无需成为 GC。“{0}”不含任何跟踪文件。",
    "GCReleaseDirNotEnabled":  "删除孤立和陈旧的发布目录选项未启用。",
    "GCReleaseDirNotExist":  "发布目录无需成为 GC。“{0}”不存在。",
    "GCUnusedTrackingFile":  "将跟踪文件“{0}”标记为 GC，因为已 {1} 天未使用它。",
    "GenerateAndRunUpdateScript":  "生成并执行更新脚本。",
    "GrantContainerUserSUDOPrivilege":  "授予用户“{0}”SUDO 特权，然后允许其运行任何命令而无需进行身份验证。",
    "GrantingFilePermissions":  "将文件权限授予“{0}”。",
    "GroupDoesNotExists":  "组: {0} 不存在",
    "ImageVersionLog":  "当前映像版本:“{0}”",
    "InitializeContainer":  "初始化容器",
    "InitializeJob":  "初始化作业",
    "InvalidAutoLogonCredential":  "为自动登录输入的 Windows 凭据无效。请确保提供的凭据有效，且在计算机上具有交互式登录权限。请重试或按 Ctrl-C 退出",
    "InvalidCommandArg":  "命令参数“{0}”包含一个或多个以下无效字符: \"、\\r、\\n",
    "InvalidCommandResult":  "命令没有有效的结果值。",
    "InvalidCompletedDate":  "每个测试运行的持续时间将用作时间计算，因为从测试结果文件获取的最晚完成日期 {0} 晚于最早开始日期 {1}。",
    "InvalidConfigFor0TerminatingUnattended":  "为 {0} 提供的配置无效。正在终止无人参与配置。",
    "InvalidDateFormat":  "每个测试运行的持续时间将用作时间计算，因为从测试结果文件获得的日期格式无效: {0} (开始日期: {1}，完成日期: {2}",
    "InvalidEndpointField":  "终结点字段无效。有效的值为 URL、dataParameter 和 authParameter",
    "InvalidEndpointId":  "终结点 ID 无效。",
    "InvalidEndpointUrl":  "终结点 URL 无效。",
    "InvalidFileFormat":  "文件格式无效。",
    "InvalidGroupName":  "无效的组名称 - {0}",
    "InvalidMember":  "无法将新成员添加到本地组，因为该成员的帐户类型有误。如果你是在域控制器中进行配置，则无法将内置计算机帐户添加到本地组。必须改用域用户帐户",
    "InvalidResultFiles":  "无效的结果文件。请确保文件“{0}”的结果格式匹配“{1}”测试结果格式。",
    "InvalidSIDForUser":  "配置/取消配置自动登录时，用户 {0}\\{1} 的安全标识符无效。请参阅日志了解更多详细信息。",
    "InvalidValueInXml":  "无法从摘要文件“{1}”中检索“{0}”的值。请验证该摘要文件格式正确，并重试。",
    "InvalidWindowsCredential":  "输入的窗口凭据无效。请重试或按 Ctrl-C 退出",
    "JenkinsBuildDoesNotExistsForCommits":  "无法找到 jenkins 生成 {0} 和 {1} 的生成索引。找到的索引为 {2} 和 {3}。生成可能不存在",
    "JenkinsCommitsInvalidEndJobId":  "与 jenkins 项目 {1} 相关联的 EndJobId {0} 无效。将不会下载提交。",
    "JenkinsDownloadingChangeFromCurrentBuild":  "找不到 endJobId，将提取当前生成的变更集",
    "JenkinsNoCommitsToFetch":  "正在部署相同的生成。没有要提取的内容",
    "JenkinsRollbackDeployment":  "下载作业 {0} 至 {1} 之间的回退部署的提交",
    "JobCompleted":  "{0:u}: 作业 {1} 已完成，结果为: {2}",
    "LaunchBrowser":  "要启动用于 AAD 设备代码流的浏览器? (是/否)",
    "ListenForJobs":  "{0:u}: 侦听作业",
    "LocalClockSkewed":  "本地计算机的时钟可能与服务器的时间不同步(超过五分钟)。请将时钟与域的时间或 Internet 的时间同步，然后重试。",
    "LocalSystemAccountNotFound":  "找不到本地系统帐户",
    "Maintenance":  "维护",
    "MaxHierarchyLevelReached":  "层次结构级别超出所支持的限制 {0}，正在截断较低层次结构。",
    "MaxSubResultLimitReached":  "测试用例中的子结果数({0} 个)超过了所支持的限制 {1}，正在截断剩余的子结果。",
    "MemberDoesNotExists":  "成员: {0} 不存在",
    "MinimumNetFramework":  "需要 .NET Framework x64 4.5 或更高版本。",
    "MinimumNetFramework46":  "需要 .NET Framework x64 4.6 或更高版本。",
    "MinimumNetFrameworkTfvc":  [
                                    ".NET Framework x64 4.6 或更高版本未安装。",
                                    "",
                                    "需要 .NET Framework x64 4.6 或更高版本来同步 TFVC 存储库。同步 Git 存储库无此要求。"
                                ],
    "MinRequiredDockerClientVersion":  "必需的 Docker 引擎 API 客户端最低版本为“{0}”，而你的 Docker (“{1}”)客户端版本为“{2}”",
    "MinRequiredDockerServerVersion":  "必需的 Docker 引擎 API 服务器最低版本为“{0}”，而你的 Docker (“{1}”)服务器版本为“{2}”",
    "MinRequiredGitLfsVersion":  "最低要求的 git-lfs 版本是“{0}”, 你的 git-lfs (“{1}”)版本是“{2}”",
    "MinRequiredGitVersion":  "最低要求的 git 版本是“{0}”, 你的 git (“{1}”)版本是“{2}”",
    "MissingAgent":  "该代理不再存在于服务器上。请重新配置该代理。",
    "MissingAttachmentFile":  "无法上传任务附件文件，未指定附件文件位置或附件文件不在磁盘上",
    "MissingAttachmentName":  "无法添加任务附件，未提供附件名称。",
    "MissingAttachmentType":  "无法添加任务附件，未提供附件类型。",
    "MissingConfig":  "无法连接到服务器，因为缺少配置文件。正在跳过从服务器中删除代理。",
    "MissingEndpointField":  "##vso[task.setendpoint] 命令中缺少必需的字段 \"field\"。",
    "MissingEndpointId":  "##vso[task.setendpoint] 命令中缺少必需的字段 \"ID\"。",
    "MissingEndpointKey":  "##vso[task.setendpoint] 命令中缺少必需的字段 \"key\"。",
    "MissingRepositoryAlias":  "未提供存储库别名，因此无法更新存储库。",
    "MissingRepositoryPath":  "未提供存储库路径，因此无法更新存储库。",
    "MissingTaskVariableName":  "##vso[task.settaskvariable] 命令中缺少必需字段 \"variable\"。",
    "MissingTimelineRecordId":  "无法更新时间线记录，未提供时间线记录 ID。",
    "MissingVariableName":  "##vso[task.setvariable] 命令中缺少必需字段 \"variable\"。",
    "ModifyingCoberturaIndexFile":  "正在修改 Cobertura 索引文件",
    "MultilineSecret":  "密码不能包含多个行",
    "N":  "N",
    "NameRequiredForTimelineRecord":  "需提供此新时间线记录的名称。",
    "NeedAdminForAutologonCapability":  "需要管理员特权才能配置具有自动登录的代理。",
    "NeedAdminForAutologonRemoval":  "需要管理员特权才能取消配置运行有自动登录功能的代理。",
    "NeedAdminForConfigAgentWinService":  "将代理配置为 Windows 服务需要管理员权限。",
    "NeedAdminForUnconfigWinServiceAgent":  "需要管理员特权来取消作为 Windows 服务而运行的代理的配置。",
    "NetworkServiceNotFound":  "找不到网络服务帐户",
    "NoArtifactsFound":  "版本“{0}”中无可用项目。",
    "NoRestart":  "稍后重启计算机? (是/否)",
    "NoRestartSuggestion":  "代理配置过程中启用了自动登录。建议重新启动计算机，以使自动登录设置生效。",
    "NoResultFound":  "找不到发布“{0}”的结果。",
    "OnPremIsNotSupported":  "本地不支持管道工件任务。请改用生成工件任务。",
    "OperatingSystemShutdown":  "计算机“{0}”的操作系统正在关闭",
    "OperationFailed":  "错误: 操作 {0} 失败，返回代码为 {1}",
    "OutputVariablePublishFailed":  "未能发布输出变量。",
    "OverwriteAutoLogon":  "由于已为用户“{0}”启用了自动登录，是否要覆盖现有自动登录设置? (Y/N)",
    "ParentTimelineNotCreated":  "尚未为此新的时间线记录创建父时间线记录。",
    "Password":  "密码",
    "PathDoesNotExist":  "路径不存在: {0}",
    "PersonalAccessToken":  "个人访问令牌",
    "PoolNotFound":  "未找到代理池:“{0}”",
    "PostJob":  "后期作业: {0}",
    "PowerOptionsConfigError":  "配置电源选项时发生错误。请参阅日志了解更多详细信息。",
    "PowerShellNotInstalledMinVersion0":  "未安装 PowerShell。要求的最低版本: {0}",
    "PreJob":  "前期作业: {0}",
    "PrepareBuildDir":  "准备生成目录。",
    "PrepareReleasesDir":  "准备发布目录。",
    "PrepareTaskExecutionHandler":  "正在准备任务执行处理程序。",
    "Prepending0WithDirectoryContaining1":  "使用包含“{1}”的目录挂起 {0} 环境变量。",
    "PrerequisitesSectionHeader":  "先决条件",
    "ProcessCompletedWithCode0Errors1":  "进程已完成，退出代码为 {0}，并且有 {1} 个错误写入了错误流。",
    "ProcessCompletedWithExitCode0":  "进程已完成，退出代码为 {0}。",
    "ProcessExitCode":  "从进程返回了退出代码 {0}: 文件名称“{1}”，参数“{2}”。",
    "ProfileLoadFailure":  "无法为用户 {0}\\{1} 加载用户配置文件，自动登录配置不可行。",
    "ProjectName":  "项目名称",
    "Prompt0":  "输入 {0}",
    "Prompt0Default1":  "输入 {0} (对于 {1} 按 Enter)",
    "PSScriptError":  "PowerShell 脚本已完成，收到 {0} 个错误。",
    "PublishCodeCoverage":  "发布代码覆盖率",
    "PublishedCodeCoverageArtifact":  "已将“{0}”发布为项目“{1}”",
    "PublishingArtifactUsingRobocopy":  "正在使用 robocopy 上传工件。",
    "PublishingCodeCoverage":  "正在将覆盖率摘要数据发布到 TFS 服务器。",
    "PublishingCodeCoverageFiles":  "正在将代码覆盖率文件发布到 TFS 服务器。",
    "PublishingTestResults":  "正在向测试运行“{0}”发布测试结果",
    "PublishTestResults":  "发布测试结果",
    "QueryingWorkspaceInfo":  "查询工作区信息。",
    "QueueConError":  "{0:u}: 代理连接错误: {1}。在重新连接之前继续重试。",
    "QueueConnected":  "{0:u}: 已重新连接代理。",
    "QuietCheckoutModeRequested":  "安静签出模式: 更少内容将打印到控制台。",
    "ReadingCodeCoverageSummary":  "正在读取“{0}”中的代码覆盖率摘要",
    "ReadOnlyTaskVariable":  "不允许覆盖只读任务变量“{0}”。有关详细信息，请参阅 https://github.com/microsoft/azure-pipelines-yaml/blob/master/design/readonly-variables.md for details。",
    "ReadOnlyTaskVariableWarning":  "正在覆盖只读任务变量“{0}”。之后将禁用此行为。有关详细信息，请参阅 https://github.com/microsoft/azure-pipelines-yaml/blob/master/design/readonly-variables.md for details。",
    "ReadOnlyVariable":  "不允许覆盖只读变量“{0}”。有关详细信息，请参阅 https://github.com/microsoft/azure-pipelines-yaml/blob/master/design/readonly-variables.md for details。",
    "ReadOnlyVariableWarning":  "正在覆盖只读变量“{0}”。之后将禁用此行为。有关详细信息，请参阅 https://github.com/microsoft/azure-pipelines-yaml/blob/master/design/readonly-variables.md for details。",
    "RegisterAgentSectionHeader":  "注册代理",
    "ReleaseDirLastUseTime":  "上次使用发布目录“{0}”的时间为: {1}",
    "RenameIndexFileCoberturaFailed":  "为“{2}”发布代码覆盖率文件时，将“{0}”重命名为“{1}”失败。内部异常:“{3}”",
    "Replace":  "替换? (Y/N)",
    "RepositoryNotExist":  "存储库不存在，因此无法更新它。",
    "RestartIn15SecMessage":  "在 15 秒后重启计算机...",
    "RestartMessage":  "重启计算机以启动代理并使自动登录设置生效。",
    "RMApiFailure":  "Api {0} 失败，错误代码为 {1}",
    "RMArtifactContainerDetailsInvalidError":  "该项目没有有效的容器详细信息: {0}",
    "RMArtifactContainerDetailsNotFoundError":  "该项目不包含容器详细信息: {0}",
    "RMArtifactDetailsIncomplete":  "找不到下载项目所需的信息",
    "RMArtifactDirectoryNotFoundError":  "项目目录不存在: {0}。如果最近更改了帐户 {1} 的密码，并且未对代理更新此密码，则可能出现此情况。如果的确如此，请考虑重新配置代理。",
    "RMArtifactDownloadBegin":  "正在下载类型为 {1} 的链接的项目 {0}...",
    "RMArtifactDownloadFinished":  "已下载链接的项目 {0}",
    "RMArtifactDownloadRequestCreationFailed":  "未能创建从 URL {0} 下载项目的请求",
    "RMArtifactEmpty":  "项目不包含任何要下载的文件。",
    "RMArtifactMatchNotFound":  "生成工件“{0}”不匹配任何命名模式，正在跳过下载",
    "RMArtifactNameDirectoryNotFound":  "目录“{0}”不存在。正在回退到父目录: {1}",
    "RMArtifactsDownloadFinished":  "已完成项目下载",
    "RMArtifactTypeFileShare":  "项目类型: FileShare",
    "RMArtifactTypeNotSupported":  "当前版本中，发布管理不支持项目类型 {0} 的下载",
    "RMArtifactTypeServerDrop":  "项目类型: ServerDrop",
    "RMArtifactVersionNotBelongToArtifactSource":  "ID 为 {0} 的项目版本不属于 ID 为 {1} 的链接的项目源。",
    "RMBuildNotFromLinkedDefinition":  "生成 {0} 不属于链接的生成定义 {1}",
    "RMCachingAllItems":  "正在缓存文件容器中的所有项目...",
    "RMCachingComplete":  "缓存完成。({0} 毫秒)",
    "RMCachingContainerItems":  "正在缓存文件容器中“{0}”下的项目...",
    "RMContainerItemNotSupported":  "不支持容器项目类型“{0}”。",
    "RMContainerItemPathDoesnotExist":  "文件容器项路径不以 {0} 开头: {1}",
    "RMContainerItemRequestTimedOut":  "{0} 秒后请求超时；睡眠 {1} 秒，然后再次尝试。请求: {2} {3}",
    "RMCreatedArtifactsDirectory":  "已创建项目目录: {0}",
    "RMCreatingArtifactsDirectory":  "正在创建项目目录: {0}",
    "RMCustomEndpointNotFound":  "作业中找不到下载自定义项目 {0} 所需的信息",
    "RMDownloadArtifactUnexpectedError":  "下载项目时发生意外错误",
    "RMDownloadBufferSize":  "下载缓冲区大小: {0}",
    "RMDownloadComplete":  "下载完毕。",
    "RMDownloadingArtifact":  "正在下载项目",
    "RMDownloadingArtifactFromFileContainer":  "正在将项目从文件容器 {0} 下载到目标 {1}",
    "RMDownloadingArtifactFromFileShare":  "正在将项目从文件共享 {0} 下载到目标 {1}",
    "RMDownloadingArtifactUsingRobocopy":  "正在使用 robocopy 下载项目。",
    "RMDownloadingCommits":  "正在下载提交",
    "RMDownloadingJenkinsArtifacts":  "正在从 Jenkins 服务器下载项目",
    "RMDownloadProgress":  "{0} 个已处理的文件: {1} 个已下载，{2} 个为空",
    "RMDownloadProgressDetails":  "已下载 {0} MB({1} KB/秒)。下载时间: {2}。",
    "RMDownloadStartDownloadOfFile":  "正在下载文件 {0}",
    "RMDownloadTaskCompletedStatus":  "{0} 分钟内无下载任务完成。保留任务状态:",
    "RMDownloadTaskStates":  " {0}: \t{1} 个任务。",
    "RMEnsureArtifactFolderExistsAndIsClean":  "确保项目文件夹 {0} 存在且无内容。",
    "RMEnvironmentVariablesAvailable":  "以下是可用的环境变量。请注意，可以在任务(在 ReleaseDefinition 中)中通过将“_”替换为“.”引用这些环境变量，如: 可以在 ReleaseDefinition 中使用 Agent.Name 引用 AGENT_NAME 环境变量: {0}",
    "RMErrorDownloadingContainerItem":  "下载 {0} 时出错: {1}",
    "RMErrorDuringArtifactDownload":  "下载期间发生错误: {0}",
    "RMFailedCreatingArtifactDirectory":  "未能创建 Release 项目目录“{0}”。",
    "RMFileShareArtifactErrorOnNonWindowsAgent":  "无法使用 OSX 或 Linux 代理从文件共享下载项目。可从服务器下载项目或使用 Windows 代理。",
    "RMGitEndpointNotFound":  "作业中找不到下载 Team Foundation Git 项目所需的信息。",
    "RMGitHubEndpointNotFound":  "作业中找不到下载 GitHub 项目所需的信息: {0}",
    "RMGotJenkinsArtifactDetails":  "收到 Jenkins 项目详细信息",
    "RMJenkinsBuildId":  "BuildId: {0}",
    "RMJenkinsEndpointNotFound":  "作业中找不到下载 Jenkins 项目所需的信息: {0}",
    "RMJenkinsInvalidBuild":  "Jenkins 生成 {0} 无效。",
    "RMJenkinsJobName":  "作业名称: {0}",
    "RMJenkinsNoArtifactsFound":  "Jenkins 生成 {0} 中无可用项目。",
    "RMLowAvailableDiskSpace":  "{0} 驱动器上的磁盘空间不足，可用空间小于 100 MB。",
    "RMNoBuildArtifactsFound":  "生成 {0} 中无可用项目。",
    "RMParallelDownloadLimit":  "并行下载限制: {0}",
    "RMPrepareToGetFromJenkinsServer":  "正在准备从 Jenkins 服务器获取项目信息",
    "RMPreparingToDownload":  "正在准备下载项目: {0}",
    "RMPreparingToGetBuildArtifactList":  "正在准备从生成中获取可用项目列表",
    "RMReAttemptingDownloadOfContainerItem":  "正在重新尝试下载 {0}。错误: {1}",
    "RMReceivedGithubArtifactDetails":  "收到 GitHub 项目详细信息",
    "RMReleaseNameRequired":  "需要发布名称。",
    "RMRemainingDownloads":  "剩余 {0} 个下载。",
    "RMRetryingArtifactDownload":  "正在重新尝试下载...",
    "RMRetryingCreatingArtifactsDirectory":  "未能创建 Release 项目目录 {0}，出现异常: {1}。请重试创建 Release 项目目录。",
    "RMRobocopyBasedArtifactDownloadExitCode":  "Robocopy 退出代码: {0}",
    "RMRobocopyBasedArtifactDownloadFailed":  "基于 Robocopy 的下载失败，退出代码为: {0}",
    "RMStartArtifactsDownload":  "开始项目下载...",
    "RMStreamTypeNotSupported":  "当前版本中，发布管理不支持下载流类型 {0}",
    "RMTfsVCEndpointNotFound":  "作业中找不到下载 Team Foundation 版本控制项目所需的信息。",
    "RMUpdateReleaseName":  "更新发布名称。",
    "RMUpdateReleaseNameForRelease":  "将发布 {1} 的发布名称更新为 {0}。",
    "RMUpdateReleaseNameForReleaseComment":  "正在使用任务日志记录命令将发布名称更新为 {0}",
    "RMUserChoseToSkipArtifactDownload":  "将根据指定设置跳过项目下载。",
    "RobocopyBasedPublishArtifactTaskExitCode":  "Robocopy 退出代码: {0}",
    "RobocopyBasedPublishArtifactTaskFailed":  "基于 robocopy 的发布失败，退出代码为: {0}",
    "RSAKeyFileNotFound":  "未找到 RSA 密钥文件 {0}",
    "RunAgentAsServiceDescription":  "是否将代理作为服务运行? (Y/N)",
    "RunAsAutoLogonDescription":  "是否在启动时配置自动登录并运行代理? (Y/N)",
    "RunIDNotValid":  "运行 ID 无效: {0}",
    "RunningJob":  "{0:u}: 运行作业: {1}",
    "SavedSettings":  "{0:u}: 设置已保存。",
    "ScanToolCapabilities":  "正在扫描工具功能。",
    "ScreenSaverPoliciesInspection":  "正在检查可能阻止禁用屏幕保护程序的策略。",
    "ScreenSaverPolicyWarning":  "计算机上已定义屏幕保护程序策略。这可能导致屏幕保护程序再次启用。活动的屏幕保护程序可能会影响 UI 操作，例如，自动的 UI 测试可能会失败。",
    "SelfManageGitCreds":  "你正处于自我管理 git 凭据模式。请确保你的代理主机可以不使用任何 git 身份验证质询。",
    "ServerTarpit":  "当前，服务器正在阻止此作业。控制台行输出、作业状态报告和任务日志上传可能出现延迟。",
    "ServerTarpitUrl":  "链接到资源使用状况页面(全局 1 小时视图): {0}。",
    "ServerTarpitUrlScoped":  "链接到资源使用状况页面(1 小时视图，按管道排列): {0}。",
    "ServerUrl":  "服务器 URL",
    "ServiceAlreadyExists":  "服务已存在: {0}，该服务将被替换",
    "ServiceConfigured":  "已成功配置服务 {0}",
    "ServiceDelayedStartOptionSet":  "服务 {0} 已成功设置为延迟自动启动",
    "ServiceInstalled":  "已成功安装服务 {0}",
    "ServiceRecoveryOptionSet":  "已成功设置服务 {0} 的恢复选项",
    "ServiceStartedSuccessfully":  "已成功启动服务 {0}",
    "SessionCreateFailed":  "未能创建会话。{0}",
    "SessionExist":  "已存在此代理的会话。",
    "SessionExistStopRetry":  "重试 {0} 秒后，出现 SessionConflictException 时停止重试。",
    "SetBuildVars":  "设置生成变量。",
    "SetEnvVar":  "正在设置环境变量 {0}",
    "ShallowCheckoutFail":  "卷影存储库上的 GIT 签出失败，这可能是因为深度为“{0}”的 GIT 提取不包含签出提交“{1}”。请参考文档(http://go.microsoft.com/fwlink/?LinkId=829603)",
    "ShallowLfsFetchFail":  "卷影存储库上的 GIT lfs 提取失败，这可能是因为深度为“{0}”的 GIT 提取不包含 lfs 提取提交“{1}”。请参考文档(http://go.microsoft.com/fwlink/?LinkId=829603)",
    "ShutdownMessage":  "重启计算机，以便在交互模式下启动代理。 ",
    "Skipping":  "不存在。正在跳过 ",
    "SkipTrackingFileWithoutRepoType":  "跳过跟踪文件“{0}”，存储库类型尚未更新。",
    "SourceArtifactProviderNotFound":  "找不到 {0} 类型项目的源提供程序",
    "StartingArtifactDownload":  "开始下载 {0}",
    "StartMaintenance":  "开始维护: {0}",
    "StepFinishing":  "完成: {0}",
    "StepStarting":  "启动: {0}",
    "StepTimedOut":  "任务已超时。",
    "StopContainer":  "停止容器",
    "Success":  "已成功: ",
    "SupportedRepositoryEndpointNotFound":  "无法将任何源存储库终结点与任何支持的源提供程序进行匹配。",
    "SupportedTaskHandlerNotFoundLinux":  "当前操作系统不能运行此任务。这通常意味着该任务专为 Windows 编写。例如，专为 Windows 桌面 PowerShell 编写。",
    "SupportedTaskHandlerNotFoundWindows":  "找不到支持的任务执行处理程序。任务不会携带与当前操作系统“{0}”兼容的实现。有关详细信息，请与任务创建者联系。",
    "SvnBranchCheckedOut":  "修订 {2} 时，已查看存储库 {1} 的分支 {0}",
    "SvnEmptyServerPath":  "空相对服务器路径已映射到“{0}”。",
    "SvnFileAlreadyExists":  "文件“{0}”已经存在",
    "SvnIncorrectRelativePath":  "指定的相对路径“{0}”不正确。",
    "SvnMappingDuplicateLocal":  "正在忽略本地路径={0}的复制映射",
    "SvnMappingDuplicateServer":  "正在忽略服务器路径={0}的复制映射",
    "SvnMappingIgnored":  "已忽略整个映射集。使用完整分支映射继续操作。",
    "SvnNotInstalled":  "找不到已安装的 svn 命令行实用工具",
    "SvnSyncingRepo":  "正在同步存储库: {0} (Svn)",
    "TaskDownloadFailed":  "未能下载任务“{0}”。错误 {1}",
    "TaskDownloadTimeout":  "任务“{0}”未在 {1} 秒内完成下载。",
    "TaskSignatureVerificationFailed":  "任务签名验证失败。",
    "TaskSignatureVerificationSucceeeded":  "任务签名验证成功。",
    "TeeEula":  [
                    "从 TFVC 存储库生成源要求接受 Team Explorer Everywhere 最终用户许可协议。本步骤不是从 Git 存储库生成源所必需的。",
                    "",
                    "可在以下位置找到 Team Explorer Everywhere 许可协议的副本:",
                    "  {0}"
                ],
    "Telemetry":  "遥测",
    "TelemetryCommandDataError":  "无法分析遥测数据 {0}。错误: {1}",
    "TelemetryCommandFailed":  "无法发布遥测数据。错误 {0}",
    "TestAgentConnection":  "正在测试代理连接。",
    "TestAttachmentNotExists":  "正在跳过附件，因为它在磁盘上不可用: {0}",
    "TestResultsRemaining":  "剩余测试结果: {0}。测试运行 ID: {1}",
    "Tfs2015NotSupported":  "针对 TFS 2015，此代理在 Windows 上不受支持。可从代理池管理页下载 TFS 2015 Windows 代理。",
    "TotalThrottlingDelay":  "因服务器调整，该作业已发生 {0} 秒延迟。",
    "TotalUploadFiles":  "正在上传 {0} 个文件",
    "TypeRequiredForTimelineRecord":  "需提供此新时间线记录的类型。",
    "UnableResolveArtifactType":  "无法从后列项目位置推导出项目类型: {0}。",
    "UnableToArchiveResults":  "无法存档测试结果: {0}",
    "UnableToParseBuildTrackingConfig0":  "无法分析旧的生成跟踪配置。将另外新建生成目录。之前的目录可能处于未声明状态。旧的配置内容: {0}",
    "UnconfigAutologon":  "正在删除自动登录设置",
    "UnconfigureOSXService":  "首先根据 https://www.visualstudio.com/en-us/docs/build/admin/agents/v2-osx 取消配置服务",
    "UnconfigureServiceDService":  "首先根据 https://www.visualstudio.com/en-us/docs/build/admin/agents/v2-linux 取消配置服务",
    "UnexpectedParallelCount":  "并行计数“%s”不受支持。输入介于 1 到 128 之间的数字。",
    "UninstallingService":  "正在删除服务",
    "UnknownCodeCoverageTool":  "不支持代码覆盖率工具“{0}”。",
    "UnrecognizedCmdArgs":  "无法识别的命令行输入参数:“{0}”。相关用法请参考: .\\config.cmd --help 或 ./config.sh --help",
    "UnregisteringAgent":  "正在从服务器删除代理",
    "UnsupportedGitLfsVersion":  "当前的 Git LFS 版本为“{0}”，但代理不支持该版本。请至少升级到版本“{1}”。有关更多详细信息，请参阅 https://github.com/git-lfs/git-lfs/issues/3571。",
    "UpdateBuildNumber":  "更新版本号",
    "UpdateBuildNumberForBuild":  "将版本 {1} 的版本号更新到 {0}",
    "UpdateInProgress":  "正在进行代理更新，请不要关闭代理。",
    "UpgradeToLatestGit":  "为了获得更好的 Git 体验，请至少将 Git 升级到版本“{0}”，当前 Git 版本是“{1}”。",
    "UploadArtifact":  "上传项目",
    "UploadArtifactCommandNotSupported":  "{0} 中不支持上传服务器项目。",
    "UploadArtifactFinished":  "管道工件上传完毕。",
    "UploadingPipelineArtifact":  "从生成 #{1} 的 {0} 上传管道工件",
    "UploadToFileContainer":  "将“{0}”上传到文件容器:“{1}”",
    "UserName":  "用户名",
    "UserNameLog":  "代理正在以“{0}”身份运行",
    "UserShutdownAgent":  "代理已收到关闭信号。在停止代理服务或取消手动启动的代理时会发生此情况。",
    "Variable0ContainsCyclicalReference":  "无法展开变量“{0}”。检测到循环引用。",
    "Variable0ExceedsMaxDepth1":  "无法展开变量“{0}”。已超出最大展开深度({1})。",
    "VMResourceWithSameNameAlreadyExistInEnvironment":  "ID 为“{0}”的环境已包含名为“{1}”的虚拟机资源。",
    "VSTSHostNonZeroReturn":  "LegacyVSTSPowerShellHost.exe 已完成，返回代码为: {0}。",
    "WaitForServiceToStop":  "正在等待服务停止...",
    "WindowsLogonAccountNameDescription":  "要用于服务的用户帐户",
    "WindowsLogonPasswordDescription":  "帐户 {0} 的密码",
    "WorkFolderDescription":  "工作文件夹",
    "WorkspaceMappingNotMatched":  "工作区 {0} 的工作区映射不匹配",
    "Y":  "Y",
    "ZipSlipFailure":  "条目在目标目录之外: {0}"
}
