# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none
parameters:
  - name: SOURCE_POST_PR
    default: "last_build"
    displayName: "Post PR pipeline build number to use"
    type: string
  - name: TARGET_ENV
    default: "stage"
    displayName: "Select Target Env For release"
    type: string  
    values:
    - 'stage'
    - 'prod'

stages:
- stage: 'Build'
  displayName: 'Build web tracker application'

  jobs:
  - job: 'Build'
    displayName: 'Build Job'
  
    pool:
      vmImage: ubuntu-latest

    steps:
    - script: echo ${{parameters.TARGET_ENV}}
    - task: NodeTool@0
      inputs:
        versionSpec: '14.x'
      displayName: 'Install Node.js'
    
    - script: |
        npm install
      displayName: 'npm install'

    - task: CopyFiles@2
      inputs:
        Contents: | 
          **/*
          !node_modules/**
          !.git/**
          !.env
        TargetFolder: $(Build.ArtifactStagingDirectory)

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

- stage: 'Deploy'
  displayName: 'Deploy web tracker app'
  dependsOn: 'Build'
  jobs:
  - deployment: 'DeployToStage'
    displayName: 'Deploy web tracker to stage environment'
    environment:
     name: stage
     resourceType: VirtualMachine
     tags: app-stage
    strategy:
     rolling:
       maxParallel: 1
       deploy:
         steps:
         - download: current
           artifact: drop
         
         - task: Bash@3
           inputs:
            targetType: 'inline'
            script: 'cd ~ && rm -rf  weight-tracker-app &&  mkdir weight-tracker-app'
          
         - task: Bash@3
           inputs:
            targetType: 'inline'
            script: 'cp -a $(Pipeline.Workspace)/drop/. ~/weight-tracker-app/'
          
         - task: Bash@3
           inputs:
             targetType: 'inline'
             script: |
              cd ~/weight-tracker-app/
              echo COOKIE_ENCRYPT_PWD=superAwesomePasswordStringThatIsAtLeast32CharactersLong! > .env
              echo OKTA_ORG_URL=https://dev-91289822.okta.com >> .env
              echo OKTA_CLIENT_ID=0oa59m58ttDIS3oDb5d7 >> .env
              echo OKTA_CLIENT_SECRET=CbFuUB44qPZ1dWL1xdM0Isu3j8QV5O_qTqc3cXXz >> .env
              echo NODE_ENV=production >> .env
              echo PORT=8080 >> .env
              printf "%s%s\n" "Host=" "$(hostname -I)" >> .env
              echo PGHOST=localhost >> .env
              echo PGUSERNAME=postgres >> .env
              echo PGDATABASE=postgres >> .env
              echo PGPASSWORD=postTHEgres >> .env
              echo PGPORT=5432 >> .env
           
        
         

             


